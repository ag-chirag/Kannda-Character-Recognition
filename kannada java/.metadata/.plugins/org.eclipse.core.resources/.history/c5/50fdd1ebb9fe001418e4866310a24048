package main;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintWriter;

import javax.imageio.ImageIO;
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Response;

import org.json.JSONException;
import org.json.JSONObject;

import logical.regression;
import regression.miniHashing;

import com.sun.jersey.core.util.Base64;

import Utils.Utils;

@Path("/recognise")
public class Web {

	
	@Path("{p}")
	@GET
	@Produces("application/json; charset=UTF-8")
	public Response getReq(@PathParam("p") String p)
	{
		Utils.clearFolders();
		System.out.println("Called get : " + p);
		BufferedImage image = null;
		try {
			image = ImageIO.read(new File("E:/uploads/" + p));
//			String jsonString = "{\"result\":\"" + processFile(image) + "\"}";
//			System.out.println(jsonString);
			JSONObject json = new JSONObject();
			
			json.put("result", processFile(image));
			String result = json + "";
			return Response.status(200).entity(result).build();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}catch (JSONException e){
			e.printStackTrace();
		}
		catch (Exception e){
			e.printStackTrace();
		}
		
		return null;
	}
	
	@SuppressWarnings("resource")
	@POST
	@Consumes("text/plain")
	public String startProcessing(String data) {	
		 System.out.println("Called Post");
			PrintWriter out = null;
			try {
				out = new PrintWriter("data.txt");
			} catch (FileNotFoundException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			out.println(data);
		 byte dearr[] = Base64.decode(data);
		 FileOutputStream fos = null;
		 BufferedImage image = null;
		try {
			fos = new FileOutputStream(new File("E:/abc.jpg"));
			fos.write(dearr);
			fos.close();
			
			image = ImageIO.read(new File("E:/abc.jpg"));
		} catch (FileNotFoundException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}catch (IOException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		} 
		
		try{
		processFile(image);
		}catch(Exception e)
		{

			System.out.println("data : " + data);	
		}
		return "Processing over.";
	}
		
	public static String processFile(BufferedImage image)
	{

		regression.result = new StringBuilder();
		Thinning th = new Thinning();
		miniHashing h = new miniHashing();
		regression r = new regression();
		int[][] imageData = null;
		try {
			imageData = Utils.to2DArray(new Binarization().getBinarized(image));
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		imageData = th.doZhangSuenThinning(imageData);
		new HorizontalProjectionProfile(imageData).extractLines("E:/buffer/",1);
		DeSkew.deSkewLines(1);
		
		h.methodforDocument();
		r.method();
		System.out.println("Recognition Done. Result : " + regression.result.toString());
		return regression.result.toString();
	}
}
